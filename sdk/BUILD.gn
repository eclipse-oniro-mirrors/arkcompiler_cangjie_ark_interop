# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("../sdk_config.gni")
import("sdk_cangjie.gni")
import("../cjc_toolchain.gni")

cj_ohos_sdk_header("sdk_header_ohos_aarch64") {
  platform = "linux_ohos_aarch64_cjnative"
}

# libs
cj_ohos_sdk_shared_lib_mock("sdk_ohos_aarch64_libs") {
  toolchain = "//build/toolchain/ohos:ohos_clang_arm64"
  platform = "linux_ohos_aarch64_cjnative"
  inputs = cangjie_ohos_libs
  module_name = "ohos"
}

cj_ohos_sdk_shared_lib_mock("sdk_kit_aarch64_libs") {
  toolchain = "//build/toolchain/ohos:ohos_clang_arm64"
  platform = "linux_ohos_aarch64_cjnative"
  inputs = cangjie_kits
  module_name = "kit"
}

cj_ohos_sdk_shared_lib_mock("sdk_ohos_x86_64_libs") {
  toolchain = "//build/toolchain/ohos:ohos_clang_x86_64"
  platform = "linux_ohos_x86_64_cjnative"
  inputs = cangjie_ohos_libs
  module_name = "ohos"
}

cj_ohos_sdk_shared_lib_mock("sdk_kit_x86_64_libs") {
  toolchain = "//build/toolchain/ohos:ohos_clang_x86_64"
  platform = "linux_ohos_x86_64_cjnative"
  inputs = cangjie_kits
  module_name = "kit"
}

# cjo
cj_ohos_sdk_lib_cjo("sdk_ohos_aarch64_cjo") {
  toolchain = "//build/toolchain/ohos:ohos_clang_arm64"
  platform = "linux_ohos_aarch64_cjnative"
  inputs = cangjie_ohos_libs
  module_name = "ohos"
}

cj_ohos_sdk_lib_cjo("sdk_kit_aarch64_cjo") {
  toolchain = "//build/toolchain/ohos:ohos_clang_arm64"
  platform = "linux_ohos_aarch64_cjnative"
  inputs = cangjie_kits
  module_name = "kit"
}

cj_ohos_sdk_lib_cjo("sdk_ohos_x86_64_cjo") {
  toolchain = "//build/toolchain/ohos:ohos_clang_x86_64"
  platform = "linux_ohos_x86_64_cjnative"
  inputs = cangjie_ohos_libs
  module_name = "ohos"
}

cj_ohos_sdk_lib_cjo("sdk_kit_x86_64_cjo") {
  toolchain = "//build/toolchain/ohos:ohos_clang_x86_64"
  platform = "linux_ohos_x86_64_cjnative"
  inputs = cangjie_kits
  module_name = "kit"
}

# interop
cj_ohos_sdk_shared_lib_interop("sdk_ohos_aarch64_ark_interop_loader") {
  toolchain = "//build/toolchain/ohos:ohos_clang_arm64"
  platform = "linux_ohos_aarch64_cjnative"
  module_name = "ohos"
}

cj_ohos_sdk_shared_lib_interop("sdk_ohos_x86_64_ark_interop_loader") {
  toolchain = "//build/toolchain/ohos:ohos_clang_x86_64"
  platform = "linux_ohos_x86_64_cjnative"
  module_name = "ohos"
}


# macro
cj_ohos_sdk("sdk_windows_x86_64_macro") {
  toolchain = "//build/toolchain/mingw:mingw_x86_64"
  platform = "x86_64-w64-mingw32"
  dyn_extension = ".dll"
  inputs = cangjie_macro_libs
  is_macro = true
  module_name = "ohos"
}

cj_ohos_sdk("sdk_linux_x86_64_macro") {
  toolchain = "//build/toolchain/linux:clang_x64"
  platform = "x86_64-linux-gnu"
  dyn_extension = ".so"
  inputs = cangjie_macro_libs
  is_macro = true
  module_name = "ohos"
}


if (host_os == "mac") {
  if (host_cpu == "arm64") {
    cj_ohos_sdk("sdk_darwin_aarch64_macro") {
      toolchain = "//build/toolchain/mac:clang_arm64"
      platform = "aarch64-apple-darwin"
      dyn_extension = ".dylib"
      inputs = cangjie_macro_libs
      is_macro = true
      module_name = "ohos"
    }
  } else if (host_cpu == "x64") {
    cj_ohos_sdk("sdk_darwin_x86_64_macro") {
      toolchain = "//build/toolchain/mac:clang_x64"
      platform = "x86_64-apple-darwin"
      dyn_extension = ".dylib"
      inputs = cangjie_macro_libs
      is_macro = true
      module_name = "ohos"
    }
  }
}

group("ohos_aarch64_libs") {
  deps = [
    ":sdk_ohos_aarch64_libs",
    ":sdk_kit_aarch64_libs",
    ":sdk_ohos_aarch64_cjo",
    ":sdk_kit_aarch64_cjo",
    ":sdk_ohos_aarch64_ark_interop_loader",
  ]
}

group("ohos_x86_64_libs") {
  deps = [
    ":sdk_ohos_x86_64_libs",
    ":sdk_kit_x86_64_libs",
    ":sdk_ohos_x86_64_cjo",
    ":sdk_kit_x86_64_cjo",
    ":sdk_ohos_x86_64_ark_interop_loader",
  ]
}

group("sdk_cangjie_api") {
  deps = [ ":ohos_aarch64_libs" ]
  if (host_cpu == "x64") {
    deps += [ ":ohos_x86_64_libs" ]
  }

  if (is_mingw) {
    deps += [
      ":sdk_windows_x86_64_macro",
      ":sdk_header_ohos_aarch64"
    ]
  } else if (host_os == "mac") {
    deps += [ ":sdk_header_ohos_aarch64" ]
    if (host_cpu == "arm64") {
      deps += [ ":sdk_darwin_aarch64_macro" ]
    } else if (host_cpu == "x64") {
      deps += [ ":sdk_darwin_x86_64_macro" ]
    }
  } else if (is_linux) {
    deps += [":sdk_linux_x86_64_macro"]
  }
}

cj_ohos_sdk_copy("sdk_api") {
  deps = [":sdk_cangjie_api"]
}

ohos_copy("sdk_compiler") {
  sources = []
  print("1111111111sdk_compiler  current_os = ${current_os}")
  print("1111111111sdk_compiler  is_linux= ${is_linux}")
  print("1111111111sdk_compiler  is_mac = ${is_mac}")
  if (is_mingw) {
    sources += [ "${cjc_cangjie_sdk_path}/windows-x64/cangjie" ]
  } else if (is_mac) {
    if (host_cpu == "arm64") {
      sources += [ "${cjc_cangjie_sdk_path}/mac-aarch64/cangjie" ]
    } else if (host_cpu == "x64") {
      sources += [ "${cjc_cangjie_sdk_path}/mac-x64/cangjie" ]
    }
  } else if (is_linux) {
    sources += [ "${cjc_cangjie_sdk_path}/linux-x64/cangjie" ]
  } else {
    assert(false && "unsupported platform %{target_cpu}")
  }

  outputs = ["${target_out_dir}/${target_name}"]
  module_source_dir = "${target_out_dir}/${target_name}"
  module_install_name = ""
}




