/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ohos_app_cangjie_entry

import std.unittest.*
import std.unittest.common.*
import std.unittest.testmacro.*
import std.collection.*
import ohos.base.*
import stdx.encoding.json.*
import ohos.data.preferences.*
import kit.ArkData.*
import kit.PerformanceAnalysisKit.Hilog
import ohos.data.preferences.ValueType as PreferencesValueType
import ohos.data.preferences.Options as PreferencesOptions
import ohos.business_exception.BusinessException

@Test
class TestGetPreferencesByOptionsOnlyName_1 {
    /*
     * @tc.number    : Sub_Cangjie_preferences_getPreferences_0400
     * @tc.name      : TestCase_1
     * @tc.desc      : get preferences by name "" with options but without group id.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_1(): Unit {
        Hilog.info(0, "cangjietest", "testcase TestCase_1 begins.")
        Hilog.info(0, "cangjietest", "fail to get preferences.")
        try {
            Preferences.getPreferences(getAbilityContext(), PreferencesOptions(""))
            @Expect("assertion#2: not throw", "fail to get preferences.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Preferences getPreferences failed: Inner error.")
            @Expect(e.code, 15500000i32)
        }
        Hilog.info(0, "cangjietest", "testcase TestCase_1 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_preferences_getPreferences_0500
     * @tc.name      : TestCase_2
     * @tc.desc      : get preferences by name "\0" with options but without group id.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_2(): Unit {
        Hilog.info(0, "cangjietest", "testcase TestCase_2 begins.")
        Hilog.info(0, "cangjietest", "fail to get preferences.")
        try {
            Preferences.getPreferences(getAbilityContext(), PreferencesOptions("\0"))
            @Expect("assertion#3: not throw", "fail to get preferences.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Preferences getPreferences failed: Inner error.")
            @Expect(e.code, 15500000i32)
        }
        Hilog.info(0, "cangjietest", "testcase TestCase_2 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_preferences_getPreferences_0600
     * @tc.name      : TestCase_3
     * @tc.desc      : get preferences by name "x" with options but without group id.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_3(): Unit {
        try {
            Hilog.info(0, "cangjietest", "testcase TestCase_3 begins.")
            Hilog.info(0, "cangjietest", "get preferences successfully.")
            Preferences.getPreferences(getAbilityContext(), PreferencesOptions("x" * 10000))
            Hilog.info(0, "cangjietest", "delete it.")
            Preferences.deletePreferences(getAbilityContext(), "x" * 10000)
            Hilog.info(0, "cangjietest", "testcase TestCase_3 ends.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Preferences getPreferences failed: Inner error.")
            @Expect(e.code, 15500000i32)
        }
    }
}
