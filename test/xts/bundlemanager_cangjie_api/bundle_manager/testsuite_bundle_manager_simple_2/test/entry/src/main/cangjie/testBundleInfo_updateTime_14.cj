/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ohos_app_cangjie_entry
import std.unittest.*
import std.unittest.common.*
import std.unittest.testmacro.*
import std.collection.*
import ohos.base.*
import stdx.encoding.json.*
import ohos.hilog.Hilog
import kit.AbilityKit.*
import ohos.bundle.bundle_manager
import ohos.arkui.state_macro_manage.r
import kit.LocalizationKit.AppResource
import ohos.bundle.bundle_manager.{HapModuleInfo, AbilityInfo, LaunchType, SupportWindowMode}
@Test
class testBundleInfo_updateTime_14 {
/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_243500
* @tc.name      : TestCase_391
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_391(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_391 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_391 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_243600
* @tc.name      : TestCase_392
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithDisable, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_392(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_392 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_392 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_243700
* @tc.name      : TestCase_393
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_393(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_393 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_393 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_243800
* @tc.name      : TestCase_394
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_394(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_394 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_394 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_243900
* @tc.name      : TestCase_395
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_395(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_395 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_395 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_244000
* @tc.name      : TestCase_396
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithDisable
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_396(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_396 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_396 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_244100
* @tc.name      : TestCase_397
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_397(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_397 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_397 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_244200
* @tc.name      : TestCase_398
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_398(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_398 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_398 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_244300
* @tc.name      : TestCase_399
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithDisable, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_399(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_399 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_399 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_244400
* @tc.name      : TestCase_400
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_400(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_400 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_400 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_244500
* @tc.name      : TestCase_401
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_401(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_401 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_401 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_244600
* @tc.name      : TestCase_402
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_402(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_402 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_402 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_244700
* @tc.name      : TestCase_403
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithMetadata
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_403(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_403 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_403 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_244800
* @tc.name      : TestCase_404
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithMetadata, GetBundleInfoWithDisable
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_404(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_404 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_404 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_244900
* @tc.name      : TestCase_405
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithMetadata, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_405(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_405 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_405 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_245000
* @tc.name      : TestCase_406
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithMetadata, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_406(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_406 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_406 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_245100
* @tc.name      : TestCase_407
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithMetadata, GetBundleInfoWithDisable, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_407(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_407 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_407 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_245200
* @tc.name      : TestCase_408
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithMetadata, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_408(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_408 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_408 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_245300
* @tc.name      : TestCase_409
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithMetadata, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_409(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_409 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_409 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_245400
* @tc.name      : TestCase_410
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithMetadata, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_410(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_410 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_410 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_245500
* @tc.name      : TestCase_411
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithDisable
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_411(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_411 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_411 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_245600
* @tc.name      : TestCase_412
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_412(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_412 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_412 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_245700
* @tc.name      : TestCase_413
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_413(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_413 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_413 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_245800
* @tc.name      : TestCase_414
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithDisable, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_414(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_414 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_414 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_245900
* @tc.name      : TestCase_415
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_415(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_415 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_415 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_246000
* @tc.name      : TestCase_416
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_416(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_416 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_416 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_246100
* @tc.name      : TestCase_417
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_417(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_417 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_417 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_246200
* @tc.name      : TestCase_418
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithRequestedPermission
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_418(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_418 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_418 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_246300
* @tc.name      : TestCase_419
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_419(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_419 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_419 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_246400
* @tc.name      : TestCase_420
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithDisable
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_420(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_420 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE)
@Expect(bundleInfo.updateTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_420 ends.")
}

}
