/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ohos_app_cangjie_entry
import std.unittest.*
import std.unittest.common.*
import std.unittest.testmacro.*
import std.collection.*
import ohos.base.*
import stdx.encoding.json.*
import ohos.hilog.Hilog
import kit.AbilityKit.*
import ohos.bundle.bundle_manager
import ohos.arkui.state_macro_manage.r
import kit.LocalizationKit.AppResource
import ohos.bundle.bundle_manager.{HapModuleInfo, AbilityInfo, LaunchType, SupportWindowMode}
@Test
class testApplicationInfo_icon_13 {
/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_240500
* @tc.name      : TestCase_361
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_361(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_361 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_361 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_240600
* @tc.name      : TestCase_362
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_362(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_362 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_362 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_240700
* @tc.name      : TestCase_363
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithRequestedPermission, GetBundleInfoWithDisable
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_363(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_363 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_363 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_240800
* @tc.name      : TestCase_364
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithRequestedPermission, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_364(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_364 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_364 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_240900
* @tc.name      : TestCase_365
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithRequestedPermission, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_365(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_365 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_365 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_241000
* @tc.name      : TestCase_366
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithRequestedPermission, GetBundleInfoWithDisable, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_366(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_366 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_366 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_241100
* @tc.name      : TestCase_367
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithRequestedPermission, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_367(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_367 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_367 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_241200
* @tc.name      : TestCase_368
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithRequestedPermission, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_368(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_368 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_368 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_241300
* @tc.name      : TestCase_369
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_369(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_369 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_369 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_241400
* @tc.name      : TestCase_370
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithMetadata
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_370(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_370 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_370 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_241500
* @tc.name      : TestCase_371
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithMetadata, GetBundleInfoWithDisable
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_371(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_371 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_371 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_241600
* @tc.name      : TestCase_372
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithMetadata, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_372(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_372 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_372 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_241700
* @tc.name      : TestCase_373
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithMetadata, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_373(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_373 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_373 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_241800
* @tc.name      : TestCase_374
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithMetadata, GetBundleInfoWithDisable, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_374(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_374 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_374 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_241900
* @tc.name      : TestCase_375
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithMetadata, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_375(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_375 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_375 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_242000
* @tc.name      : TestCase_376
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithMetadata, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_376(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_376 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_376 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_242100
* @tc.name      : TestCase_377
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithMetadata, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_377(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_377 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_377 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_242200
* @tc.name      : TestCase_378
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithDisable
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_378(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_378 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_378 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_242300
* @tc.name      : TestCase_379
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_379(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_379 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_379 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_242400
* @tc.name      : TestCase_380
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_380(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_380 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_380 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_242500
* @tc.name      : TestCase_381
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithDisable, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_381(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_381 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_381 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_242600
* @tc.name      : TestCase_382
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_382(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_382 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_382 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_242700
* @tc.name      : TestCase_383
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_383(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_383 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_383 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_242800
* @tc.name      : TestCase_384
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_384(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_384 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_384 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_242900
* @tc.name      : TestCase_385
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithAbility
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_385(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_385 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_385 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_243000
* @tc.name      : TestCase_386
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_386(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_386 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_386 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_243100
* @tc.name      : TestCase_387
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_387(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_387 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_387 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_243200
* @tc.name      : TestCase_388
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_388(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_388 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_388 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_243300
* @tc.name      : TestCase_389
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithDisable
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_389(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_389 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_389 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ApplicationInfo_243400
* @tc.name      : TestCase_390
* @tc.desc      : check application info with bundle flags: GetBundleInfoWithAbility, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_390(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_390 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
Hilog.info(0u32, "CangjieTest", "define local variable applicationInfo")
let applicationInfo = bundleInfo.appInfo
@Expect(applicationInfo.icon, "")
@Expect(applicationInfo.iconId, 0i32)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_390 ends.")
}

}
