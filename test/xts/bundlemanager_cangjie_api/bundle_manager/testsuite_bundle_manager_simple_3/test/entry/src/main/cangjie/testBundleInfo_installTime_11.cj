/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ohos_app_cangjie_entry
import std.unittest.*
import std.unittest.common.*
import std.unittest.testmacro.*
import std.collection.*
import ohos.base.*
import stdx.encoding.json.*
import ohos.hilog.Hilog
import kit.AbilityKit.*
import ohos.bundle.bundle_manager
import ohos.arkui.state_macro_manage.r
import kit.LocalizationKit.AppResource
import ohos.bundle.bundle_manager.{HapModuleInfo, AbilityInfo, LaunchType, SupportWindowMode}
@Test
class testBundleInfo_installTime_11 {
/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_336700
* @tc.name      : TestCase_301
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_301(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_301 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_301 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_336800
* @tc.name      : TestCase_302
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_302(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_302 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_302 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_336900
* @tc.name      : TestCase_303
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithDisable, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_303(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_303 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_303 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_337000
* @tc.name      : TestCase_304
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_304(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_304 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_304 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_337100
* @tc.name      : TestCase_305
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_305(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_305 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_305 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_337200
* @tc.name      : TestCase_306
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_306(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_306 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_306 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_337300
* @tc.name      : TestCase_307
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithAbility, GetBundleInfoWithMetadata
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_307(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_307 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_307 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_337400
* @tc.name      : TestCase_308
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithAbility, GetBundleInfoWithMetadata, GetBundleInfoWithDisable
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_308(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_308 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_308 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_337500
* @tc.name      : TestCase_309
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithAbility, GetBundleInfoWithMetadata, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_309(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_309 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_309 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_337600
* @tc.name      : TestCase_310
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithAbility, GetBundleInfoWithMetadata, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_310(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_310 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_310 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_337700
* @tc.name      : TestCase_311
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithAbility, GetBundleInfoWithMetadata, GetBundleInfoWithDisable, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_311(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_311 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_311 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_337800
* @tc.name      : TestCase_312
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithAbility, GetBundleInfoWithMetadata, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_312(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_312 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_312 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_337900
* @tc.name      : TestCase_313
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithAbility, GetBundleInfoWithMetadata, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_313(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_313 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_313 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_338000
* @tc.name      : TestCase_314
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithAbility, GetBundleInfoWithMetadata, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_314(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_314 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_314 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_338100
* @tc.name      : TestCase_315
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithAbility, GetBundleInfoWithDisable
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_315(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_315 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_315 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_338200
* @tc.name      : TestCase_316
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithAbility, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_316(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_316 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_316 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_338300
* @tc.name      : TestCase_317
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithAbility, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_317(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_317 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_317 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_338400
* @tc.name      : TestCase_318
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithAbility, GetBundleInfoWithDisable, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_318(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_318 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_318 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_338500
* @tc.name      : TestCase_319
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithAbility, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_319(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_319 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_319 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_338600
* @tc.name      : TestCase_320
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithAbility, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_320(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_320 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_320 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_338700
* @tc.name      : TestCase_321
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithAbility, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_321(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_321 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_321 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_338800
* @tc.name      : TestCase_322
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_322(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_322 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_322 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_338900
* @tc.name      : TestCase_323
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_323(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_323 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_323 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_339000
* @tc.name      : TestCase_324
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_324(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_324 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_324 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_339100
* @tc.name      : TestCase_325
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithDisable
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_325(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_325 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_325 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_339200
* @tc.name      : TestCase_326
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_326(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_326 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_326 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_339300
* @tc.name      : TestCase_327
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_327(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_327 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_327 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_339400
* @tc.name      : TestCase_328
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithDisable, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_328(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_328 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_328 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_339500
* @tc.name      : TestCase_329
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_329(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_329 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_329 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_BundleInfo_339600
* @tc.name      : TestCase_330
* @tc.desc      : check BundleInfo with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_330(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_330 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
@Expect(bundleInfo.installTime > 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_330 ends.")
}

}
