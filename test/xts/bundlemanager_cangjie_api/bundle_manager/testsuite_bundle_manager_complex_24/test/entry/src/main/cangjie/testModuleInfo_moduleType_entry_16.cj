/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ohos_app_cangjie_entry
import std.unittest.*
import std.unittest.common.*
import std.unittest.testmacro.*
import std.collection.*
import ohos.base.*
import stdx.encoding.json.*
import ohos.hilog.Hilog
import kit.AbilityKit.*
import ohos.bundle.bundle_manager
import ohos.arkui.state_macro_manage.r
import kit.LocalizationKit.AppResource
import ohos.bundle.bundle_manager.{HapModuleInfo, AbilityInfo, LaunchType, SupportWindowMode}
@Test
class testModuleInfo_moduleType_entry_16 {
/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_913800
* @tc.name      : TestCase_451
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_451(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_451 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_451 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_913900
* @tc.name      : TestCase_452
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithDisable
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_452(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_452 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_452 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_914000
* @tc.name      : TestCase_453
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_453(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_453 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_453 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_914100
* @tc.name      : TestCase_454
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_454(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_454 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_454 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_914200
* @tc.name      : TestCase_455
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithDisable, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_455(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_455 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_455 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_914300
* @tc.name      : TestCase_456
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_456(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_456 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_456 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_914400
* @tc.name      : TestCase_457
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_457(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_457 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_457 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_914500
* @tc.name      : TestCase_458
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_458(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_458 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_458 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_914600
* @tc.name      : TestCase_459
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithDisable
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_459(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_459 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_459 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_914700
* @tc.name      : TestCase_460
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_460(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_460 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_460 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_914800
* @tc.name      : TestCase_461
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_461(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_461 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_461 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_914900
* @tc.name      : TestCase_462
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithDisable, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_462(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_462 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_462 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_915000
* @tc.name      : TestCase_463
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_463(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_463 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_463 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_915100
* @tc.name      : TestCase_464
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_464(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_464 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_464 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_915200
* @tc.name      : TestCase_465
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_465(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_465 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_465 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_915300
* @tc.name      : TestCase_466
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithMetadata
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_466(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_466 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_466 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_915400
* @tc.name      : TestCase_467
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithMetadata, GetBundleInfoWithDisable
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_467(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_467 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_467 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_915500
* @tc.name      : TestCase_468
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithMetadata, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_468(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_468 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_468 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_915600
* @tc.name      : TestCase_469
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithMetadata, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_469(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_469 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_469 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_915700
* @tc.name      : TestCase_470
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithMetadata, GetBundleInfoWithDisable, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_470(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_470 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_470 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_915800
* @tc.name      : TestCase_471
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithMetadata, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_471(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_471 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_471 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_915900
* @tc.name      : TestCase_472
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithMetadata, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_472(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_472 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_472 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_916000
* @tc.name      : TestCase_473
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithMetadata, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_473(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_473 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_473 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_916100
* @tc.name      : TestCase_474
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithDisable
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_474(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_474 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_474 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_916200
* @tc.name      : TestCase_475
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_475(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_475 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_475 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_916300
* @tc.name      : TestCase_476
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_476(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_476 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_476 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_916400
* @tc.name      : TestCase_477
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithDisable, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_477(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_477 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_477 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_916500
* @tc.name      : TestCase_478
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_478(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_478 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_478 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_916600
* @tc.name      : TestCase_479
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_479(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_479 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_479 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_916700
* @tc.name      : TestCase_480
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithExtensionAbility, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_480(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_480 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 0i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_480 ends.")
}

}
