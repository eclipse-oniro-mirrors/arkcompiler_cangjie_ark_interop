/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ohos_app_cangjie_entry

import std.unittest.testmacro.{Test, Expect, TestCase}
import std.unittest.testmacro.*
import std.unittest.*
import std.unittest.common.*
import ohos.ui_test.*
import kit.PerformanceAnalysisKit.Hilog

@Test
class TestPermissionInfo {

    /*
    * @tc.number    : Sub_Cangjie_BundleManager_TestPermissionInfo_0100
    * @tc.name      : test_permissionInfo_00
    * @tc.desc      : test BundleManager test_permissionInfo_00
    * @tc.size      : MediumTest
    * @tc.type      : Function
    * @tc.level     : Level 0
    */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func test_permissionInfo_00(): Unit {
        let bundleInfo = getFullBundleInfo()
        let reqPermissionDetails = bundleInfo.reqPermissionDetails
        Hilog.error(0,"cangjie","reqPermissionDetails.size = ${reqPermissionDetails.size}")
        let permissionGrantStates = bundleInfo.permissionGrantStates
        let numberOfReqPermissionDetails = reqPermissionDetails.size
        let numberOfPermissionGrantStates = permissionGrantStates.size
        // 应用申请的权限列表与权限授予状态列表中的元素是一一对应的，因此两个列表中的元素的数量必定相等
        @Expect(numberOfReqPermissionDetails, numberOfPermissionGrantStates)
        for (index in 0..numberOfReqPermissionDetails) {
            let permission = reqPermissionDetails[index]
            let permissionName = permission.name
            let moduleName = permission.moduleName
            let reason = permission.reason
            let reasonId = permission.reasonId
            let usedScene = permission.usedScene
            let grantState = permissionGrantStates[index]
        }
    }
}
