/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ohos_app_cangjie_entry
import std.unittest.*
import std.unittest.common.*
import std.unittest.testmacro.*
import std.collection.*
import ohos.base.*
import stdx.encoding.json.*
import ohos.hilog.Hilog
import kit.AbilityKit.*
import ohos.bundle.bundle_manager
import ohos.arkui.state_macro_manage.r
import kit.LocalizationKit.AppResource
import ohos.bundle.bundle_manager.{HapModuleInfo, AbilityInfo, LaunchType, SupportWindowMode}
@Test
class testModuleInfo_name_entry_12 {
/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_186400
* @tc.name      : TestCase_331
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_331(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_331 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_331 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_186500
* @tc.name      : TestCase_332
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithDisable
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_332(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_332 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_332 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_186600
* @tc.name      : TestCase_333
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_333(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_333 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_333 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_186700
* @tc.name      : TestCase_334
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_334(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_334 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_334 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_186800
* @tc.name      : TestCase_335
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithDisable, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_335(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_335 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_335 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_186900
* @tc.name      : TestCase_336
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_336(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_336 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_336 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_187000
* @tc.name      : TestCase_337
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_337(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_337 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_337 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_187100
* @tc.name      : TestCase_338
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_338(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_338 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_338 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_187200
* @tc.name      : TestCase_339
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithMetadata
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_339(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_339 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_339 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_187300
* @tc.name      : TestCase_340
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithMetadata, GetBundleInfoWithDisable
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_340(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_340 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_340 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_187400
* @tc.name      : TestCase_341
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithMetadata, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_341(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_341 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_341 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_187500
* @tc.name      : TestCase_342
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithMetadata, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_342(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_342 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_342 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_187600
* @tc.name      : TestCase_343
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithMetadata, GetBundleInfoWithDisable, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_343(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_343 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_343 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_187700
* @tc.name      : TestCase_344
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithMetadata, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_344(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_344 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_344 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_187800
* @tc.name      : TestCase_345
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithMetadata, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_345(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_345 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_345 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_187900
* @tc.name      : TestCase_346
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithMetadata, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_346(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_346 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_346 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_188000
* @tc.name      : TestCase_347
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithDisable
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_347(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_347 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_347 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_188100
* @tc.name      : TestCase_348
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_348(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_348 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_348 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_188200
* @tc.name      : TestCase_349
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_349(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_349 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_349 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_188300
* @tc.name      : TestCase_350
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithDisable, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_350(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_350 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_350 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_188400
* @tc.name      : TestCase_351
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_351(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_351 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_351 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_188500
* @tc.name      : TestCase_352
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_352(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_352 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_352 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_188600
* @tc.name      : TestCase_353
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithExtensionAbility, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_353(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_353 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_EXTENSION_ABILITY | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_353 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_188700
* @tc.name      : TestCase_354
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithRequestedPermission
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_354(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_354 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_354 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_188800
* @tc.name      : TestCase_355
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_355(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_355 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_355 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_188900
* @tc.name      : TestCase_356
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithDisable
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_356(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_356 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_356 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_189000
* @tc.name      : TestCase_357
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_357(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_357 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_357 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_189100
* @tc.name      : TestCase_358
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithDisable, GetBundleInfoWithSignatureInfo, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_358(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_358 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_358 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_189200
* @tc.name      : TestCase_359
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithDisable, GetBundleInfoWithMenu
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_359(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_359 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_DISABLE | BundleFlag.GET_BUNDLE_INFO_WITH_MENU)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_359 ends.")
}

/*
* @tc.number    : Sub_Cangjie_bundleManager_ModuleInfo_189300
* @tc.name      : TestCase_360
* @tc.desc      : check module info of module entry with bundle flags: GetBundleInfoWithHapModule, GetBundleInfoWithRequestedPermission, GetBundleInfoWithMetadata, GetBundleInfoWithSignatureInfo
* @tc.size      : MediumTest
* @tc.type      : Function
* @tc.level     : Level 0
*/

@TestCase
@Tag[APILevel12, TestLevel0]
func TestCase_360(): Unit  {
Hilog.info(0u32, "CangjieTest", "testcase TestCase_360 begins.")
Hilog.info(0u32, "CangjieTest", "define local variable bundleInfo")
let bundleInfo = BundleManager.getBundleInfoForSelf(BundleFlag.GET_BUNDLE_INFO_WITH_HAP_MODULE | BundleFlag.GET_BUNDLE_INFO_WITH_REQUESTED_PERMISSION | BundleFlag.GET_BUNDLE_INFO_WITH_METADATA | BundleFlag.GET_BUNDLE_INFO_WITH_SIGNATURE_INFO)
Hilog.info(0u32, "CangjieTest", "define local variable resourceManager")
let resourceManager = getResourceManager()
@Expect(bundleInfo.hapModulesInfo.size, 1i64)
Hilog.info(0u32, "CangjieTest", "testcase TestCase_360 ends.")
}

}
