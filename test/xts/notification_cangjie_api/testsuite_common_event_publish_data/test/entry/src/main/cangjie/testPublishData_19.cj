/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ohos_app_cangjie_entry

import std.unittest.*
import std.unittest.common.*
import std.unittest.testmacro.*
import std.collection.*
import ohos.base.*
import stdx.encoding.json.*
import kit.BasicServicesKit.*
import kit.PerformanceAnalysisKit.Hilog
import std.collection.HashMap
import ohos.business_exception.BusinessException

@Test
class testPublishData_19 {
    @BeforeAll
    func beforeAll() {
        Hilog.info(0u32, "cangjietest", "", "get user granted permission ohos.permission.COMMONEVENT_STICKY")
        try {
            getRequiredPermissions(["ohos.permission.COMMONEVENT_STICKY"])
            sleep(Duration.second * 1i64)
            click(at: Screen.getTheOnlyUiComponentWhoseTextEqualsTo("允许").centerPoint)
            sleep(Duration.second * 1i64)
        } catch (_: Exception) {
            Hilog.info(0u32, "cangjietest", "", "get user granted permission fail")
        }
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_54100
     * @tc.name      : TestCase_541
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_541(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_541 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 1i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: false, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_541 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_54200
     * @tc.name      : TestCase_542
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_542(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_542 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 1i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: false, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_542 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_54300
     * @tc.name      : TestCase_543
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_543(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_543 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 1i32,
                    subscriberPermissions: ["Data"], isOrdered: false, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_543 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_54400
     * @tc.name      : TestCase_544
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_544(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_544 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 1i32,
                    subscriberPermissions: ["Data"], isOrdered: false, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_544 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_54500
     * @tc.name      : TestCase_545
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_545(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_545 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 0i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: true, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_545 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_54600
     * @tc.name      : TestCase_546
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_546(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_546 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 0i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: true, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_546 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_54700
     * @tc.name      : TestCase_547
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_547(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_547 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 0i32,
                    subscriberPermissions: ["Data"], isOrdered: true, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_547 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_54800
     * @tc.name      : TestCase_548
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_548(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_548 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 0i32,
                    subscriberPermissions: ["Data"], isOrdered: true, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_548 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_54900
     * @tc.name      : TestCase_549
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_549(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_549 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 0i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: false, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_549 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_55000
     * @tc.name      : TestCase_550
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_550(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_550 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 0i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: false, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_550 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_55100
     * @tc.name      : TestCase_551
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_551(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_551 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 0i32,
                    subscriberPermissions: ["Data"], isOrdered: false, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_551 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_55200
     * @tc.name      : TestCase_552
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_552(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_552 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 0i32,
                    subscriberPermissions: ["Data"], isOrdered: false, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_552 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_55300
     * @tc.name      : TestCase_553
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_553(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_553 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 1i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: true, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_553 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_55400
     * @tc.name      : TestCase_554
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_554(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_554 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 1i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: true, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_554 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_55500
     * @tc.name      : TestCase_555
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_555(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_555 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 1i32,
                    subscriberPermissions: ["Data"], isOrdered: true, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_555 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_55600
     * @tc.name      : TestCase_556
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_556(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_556 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 1i32,
                    subscriberPermissions: ["Data"], isOrdered: true, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_556 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_55700
     * @tc.name      : TestCase_557
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_557(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_557 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 1i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: false, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_557 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_55800
     * @tc.name      : TestCase_558
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_558(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_558 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 1i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: false, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_558 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_55900
     * @tc.name      : TestCase_559
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_559(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_559 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 1i32,
                    subscriberPermissions: ["Data"], isOrdered: false, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_559 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_56000
     * @tc.name      : TestCase_560
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_560(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_560 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 1i32,
                    subscriberPermissions: ["Data"], isOrdered: false, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_560 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_56100
     * @tc.name      : TestCase_561
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_561(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_561 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "sw65^6&^$%$", code: 0i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: true, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_561 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_56200
     * @tc.name      : TestCase_562
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_562(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_562 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "sw65^6&^$%$", code: 0i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: true, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_562 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_56300
     * @tc.name      : TestCase_563
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_563(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_563 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "sw65^6&^$%$", code: 0i32,
                    subscriberPermissions: ["Data"], isOrdered: true, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_563 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_56400
     * @tc.name      : TestCase_564
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_564(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_564 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "sw65^6&^$%$", code: 0i32,
                    subscriberPermissions: ["Data"], isOrdered: true, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_564 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_56500
     * @tc.name      : TestCase_565
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_565(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_565 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "sw65^6&^$%$", code: 0i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: false, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_565 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_56600
     * @tc.name      : TestCase_566
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_566(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_566 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "sw65^6&^$%$", code: 0i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: false, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_566 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_56700
     * @tc.name      : TestCase_567
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_567(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_567 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "sw65^6&^$%$", code: 0i32,
                    subscriberPermissions: ["Data"], isOrdered: false, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_567 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_56800
     * @tc.name      : TestCase_568
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_568(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_568 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "sw65^6&^$%$", code: 0i32,
                    subscriberPermissions: ["Data"], isOrdered: false, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_568 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_56900
     * @tc.name      : TestCase_569
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_569(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_569 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "sw65^6&^$%$", code: 1i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: true, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_569 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_57000
     * @tc.name      : TestCase_570
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.DRIVE_MODE"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_570(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_570 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.DRIVE_MODE",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "sw65^6&^$%$", code: 1i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: true, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_570 ends.")
    }
}
