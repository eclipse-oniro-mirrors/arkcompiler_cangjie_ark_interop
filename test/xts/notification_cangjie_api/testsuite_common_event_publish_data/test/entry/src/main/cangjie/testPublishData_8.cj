/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ohos_app_cangjie_entry

import std.unittest.*
import std.unittest.common.*
import std.unittest.testmacro.*
import std.collection.*
import ohos.base.*
import stdx.encoding.json.*
import kit.BasicServicesKit.*
import kit.PerformanceAnalysisKit.Hilog
import std.collection.HashMap
import ohos.business_exception.BusinessException

@Test
class testPublishData_8 {
    @BeforeAll
    func beforeAll() {
        Hilog.info(0u32, "cangjietest", "", "get user granted permission ohos.permission.COMMONEVENT_STICKY")
        try {
            getRequiredPermissions(["ohos.permission.COMMONEVENT_STICKY"])
            sleep(Duration.second * 1i64)
            click(at: Screen.getTheOnlyUiComponentWhoseTextEqualsTo("允许").centerPoint)
            sleep(Duration.second * 1i64)
        } catch (_: Exception) {
            Hilog.info(0u32, "cangjietest", "", "get user granted permission fail")
        }
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_21100
     * @tc.name      : TestCase_211
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_211(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_211 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 0i32,
                    subscriberPermissions: ["Data"], isOrdered: true, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_211 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_21200
     * @tc.name      : TestCase_212
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_212(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_212 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 0i32,
                    subscriberPermissions: ["Data"], isOrdered: true, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_212 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_21300
     * @tc.name      : TestCase_213
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_213(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_213 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 0i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: false, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_213 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_21400
     * @tc.name      : TestCase_214
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_214(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_214 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 0i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: false, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_214 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_21500
     * @tc.name      : TestCase_215
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_215(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_215 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 0i32,
                    subscriberPermissions: ["Data"], isOrdered: false, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_215 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_21600
     * @tc.name      : TestCase_216
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_216(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_216 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 0i32,
                    subscriberPermissions: ["Data"], isOrdered: false, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_216 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_21700
     * @tc.name      : TestCase_217
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_217(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_217 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 1i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: true, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_217 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_21800
     * @tc.name      : TestCase_218
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_218(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_218 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 1i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: true, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_218 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_21900
     * @tc.name      : TestCase_219
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_219(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_219 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 1i32,
                    subscriberPermissions: ["Data"], isOrdered: true, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_219 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_22000
     * @tc.name      : TestCase_220
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_220(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_220 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 1i32,
                    subscriberPermissions: ["Data"], isOrdered: true, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_220 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_22100
     * @tc.name      : TestCase_221
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_221(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_221 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 1i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: false, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_221 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_22200
     * @tc.name      : TestCase_222
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_222(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_222 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 1i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: false, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_222 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_22300
     * @tc.name      : TestCase_223
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_223(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_223 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 1i32,
                    subscriberPermissions: ["Data"], isOrdered: false, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_223 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_22400
     * @tc.name      : TestCase_224
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_224(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_224 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 1i32,
                    subscriberPermissions: ["Data"], isOrdered: false, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_224 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_22500
     * @tc.name      : TestCase_225
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_225(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_225 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 0i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: true, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_225 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_22600
     * @tc.name      : TestCase_226
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_226(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_226 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 0i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: true, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_226 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_22700
     * @tc.name      : TestCase_227
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_227(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_227 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 0i32,
                    subscriberPermissions: ["Data"], isOrdered: true, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_227 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_22800
     * @tc.name      : TestCase_228
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_228(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_228 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 0i32,
                    subscriberPermissions: ["Data"], isOrdered: true, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_228 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_22900
     * @tc.name      : TestCase_229
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_229(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_229 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 0i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: false, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_229 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_23000
     * @tc.name      : TestCase_230
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_230(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_230 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 0i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: false, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_230 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_23100
     * @tc.name      : TestCase_231
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_231(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_231 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 0i32,
                    subscriberPermissions: ["Data"], isOrdered: false, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_231 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_23200
     * @tc.name      : TestCase_232
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_232(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_232 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 0i32,
                    subscriberPermissions: ["Data"], isOrdered: false, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_232 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_23300
     * @tc.name      : TestCase_233
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_233(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_233 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 1i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: true, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_233 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_23400
     * @tc.name      : TestCase_234
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_234(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_234 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 1i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: true, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_234 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_23500
     * @tc.name      : TestCase_235
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_235(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_235 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 1i32,
                    subscriberPermissions: ["Data"], isOrdered: true, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_235 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_23600
     * @tc.name      : TestCase_236
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_236(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_236 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 1i32,
                    subscriberPermissions: ["Data"], isOrdered: true, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_236 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_23700
     * @tc.name      : TestCase_237
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_237(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_237 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 1i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: false, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_237 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_23800
     * @tc.name      : TestCase_238
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_238(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_238 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 1i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: false, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_238 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_23900
     * @tc.name      : TestCase_239
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_239(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_239 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 1i32,
                    subscriberPermissions: ["Data"], isOrdered: false, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_239 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_24000
     * @tc.name      : TestCase_240
     * @tc.desc      : test publish parameter use commonEventPublishData "usual.event.DISCHARGING"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_240(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_240 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("usual.event.DISCHARGING",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 1i32,
                    subscriberPermissions: ["Data"], isOrdered: false, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_240 ends.")
    }
}
