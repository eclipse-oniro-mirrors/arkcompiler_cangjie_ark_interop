/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ohos_app_cangjie_entry

import std.unittest.*
import std.unittest.common.*
import std.unittest.testmacro.*
import std.collection.*
import ohos.base.*
import stdx.encoding.json.*
import kit.BasicServicesKit.*
import kit.PerformanceAnalysisKit.Hilog
import std.collection.HashMap
import ohos.business_exception.BusinessException

@Test
class testPublishData_38 {
    @BeforeAll
    func beforeAll() {
        Hilog.info(0u32, "cangjietest", "", "get user granted permission ohos.permission.COMMONEVENT_STICKY")
        try {
            getRequiredPermissions(["ohos.permission.COMMONEVENT_STICKY"])
            sleep(Duration.second * 1i64)
            click(at: Screen.getTheOnlyUiComponentWhoseTextEqualsTo("允许").centerPoint)
            sleep(Duration.second * 1i64)
        } catch (_: Exception) {
            Hilog.info(0u32, "cangjietest", "", "get user granted permission fail")
        }
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_111100
     * @tc.name      : TestCase_1111
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1111(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1111 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 0i32,
                    subscriberPermissions: ["Data"], isOrdered: false, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1111 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_111200
     * @tc.name      : TestCase_1112
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1112(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1112 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 0i32,
                    subscriberPermissions: ["Data"], isOrdered: false, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1112 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_111300
     * @tc.name      : TestCase_1113
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1113(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1113 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 1i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: true, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1113 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_111400
     * @tc.name      : TestCase_1114
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1114(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1114 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 1i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: true, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1114 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_111500
     * @tc.name      : TestCase_1115
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1115(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1115 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 1i32,
                    subscriberPermissions: ["Data"], isOrdered: true, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1115 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_111600
     * @tc.name      : TestCase_1116
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1116(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1116 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 1i32,
                    subscriberPermissions: ["Data"], isOrdered: true, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1116 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_111700
     * @tc.name      : TestCase_1117
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1117(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1117 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 1i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: false, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1117 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_111800
     * @tc.name      : TestCase_1118
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1118(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1118 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 1i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: false, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1118 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_111900
     * @tc.name      : TestCase_1119
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1119(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1119 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 1i32,
                    subscriberPermissions: ["Data"], isOrdered: false, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1119 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_112000
     * @tc.name      : TestCase_1120
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"com.example.myapplication"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1120(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1120 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "com.example.myapplication", data: "sw65^6&^$%$", code: 1i32,
                    subscriberPermissions: ["Data"], isOrdered: false, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1120 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_112100
     * @tc.name      : TestCase_1121
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1121(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1121 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 0i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: true, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1121 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_112200
     * @tc.name      : TestCase_1122
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1122(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1122 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 0i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: true, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1122 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_112300
     * @tc.name      : TestCase_1123
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1123(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1123 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 0i32,
                    subscriberPermissions: ["Data"], isOrdered: true, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1123 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_112400
     * @tc.name      : TestCase_1124
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1124(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1124 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 0i32,
                    subscriberPermissions: ["Data"], isOrdered: true, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1124 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_112500
     * @tc.name      : TestCase_1125
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1125(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1125 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 0i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: false, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1125 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_112600
     * @tc.name      : TestCase_1126
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1126(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1126 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 0i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: false, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1126 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_112700
     * @tc.name      : TestCase_1127
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1127(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1127 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 0i32,
                    subscriberPermissions: ["Data"], isOrdered: false, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1127 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_112800
     * @tc.name      : TestCase_1128
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1128(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1128 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 0i32,
                    subscriberPermissions: ["Data"], isOrdered: false, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1128 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_112900
     * @tc.name      : TestCase_1129
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1129(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1129 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 1i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: true, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1129 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_113000
     * @tc.name      : TestCase_1130
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1130(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1130 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 1i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: true, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1130 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_113100
     * @tc.name      : TestCase_1131
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1131(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1131 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 1i32,
                    subscriberPermissions: ["Data"], isOrdered: true, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1131 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_113200
     * @tc.name      : TestCase_1132
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1132(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1132 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 1i32,
                    subscriberPermissions: ["Data"], isOrdered: true, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1132 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_113300
     * @tc.name      : TestCase_1133
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1133(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1133 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 1i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: false, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1133 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_113400
     * @tc.name      : TestCase_1134
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1134(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1134 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 1i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: false, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1134 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_113500
     * @tc.name      : TestCase_1135
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1135(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1135 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 1i32,
                    subscriberPermissions: ["Data"], isOrdered: false, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1135 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_113600
     * @tc.name      : TestCase_1136
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1136(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1136 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "DATA", code: 1i32,
                    subscriberPermissions: ["Data"], isOrdered: false, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1136 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_113700
     * @tc.name      : TestCase_1137
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1137(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1137 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "sw65^6&^$%$", code: 0i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: true, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1137 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_113800
     * @tc.name      : TestCase_1138
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1138(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1138 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "sw65^6&^$%$", code: 0i32,
                    subscriberPermissions: ["subscriberPermissions"], isOrdered: true, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1138 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_113900
     * @tc.name      : TestCase_1139
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1139(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1139 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "sw65^6&^$%$", code: 0i32,
                    subscriberPermissions: ["Data"], isOrdered: true, isSticky: true,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1139 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_testPublishData_publish_114000
     * @tc.name      : TestCase_1140
     * @tc.desc      : test publish parameter use commonEventPublishData "common.event.IVI_STANDBY"+"!#$@%^&*"
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel21, TestLevel0]
    func TestCase_1140(): Unit {
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1140 begins.")
        Hilog.info(0u32, "cangjietest", "", "case start")
        try {
            CommonEventManager.publish("common.event.IVI_STANDBY",
                options: CommonEventPublishData(bundleName: "!#$@%^&*", data: "sw65^6&^$%$", code: 0i32,
                    subscriberPermissions: ["Data"], isOrdered: true, isSticky: false,
                    parameters: HashMap<String, ValueType>()))
        } catch (e: BusinessException) {
            @Expect(false)
        }
        Hilog.info(0u32, "cangjietest", "", "testcase TestCase_1140 ends.")
    }
}
