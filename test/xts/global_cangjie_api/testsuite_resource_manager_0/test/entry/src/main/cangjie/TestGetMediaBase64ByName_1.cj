/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
package ohos_app_cangjie_entry

import std.unittest.*
import std.unittest.common.*
import std.unittest.testmacro.*
import std.collection.*
import ohos.base.*
import stdx.encoding.json.*
import ohos.arkui.state_macro_manage.r
import ohos.resource_manager.AppResource
import kit.PerformanceAnalysisKit.Hilog
import ohos.business_exception.*
import ohos.resource_manager.ArgsValueType
import ohos.resource_manager.ScreenDensity
import ohos.resource_manager.NumberValueType

@Test
class TestGetMediaBase64ByName_1 {
    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_0100
     * @tc.name      : TestCase_1
     * @tc.desc      : get MediaBase64 by resName=, density=ScreenDensity.ScreenSdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_1(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_1 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("", density: ScreenDensity.ScreenSdpi)
            @Expect("assertion#889: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_1 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_0200
     * @tc.name      : TestCase_2
     * @tc.desc      : get MediaBase64 by resName=, density=ScreenDensity.ScreenMdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_2(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_2 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("", density: ScreenDensity.ScreenMdpi)
            @Expect("assertion#890: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_2 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_0300
     * @tc.name      : TestCase_3
     * @tc.desc      : get MediaBase64 by resName=, density=ScreenDensity.ScreenLdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_3(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_3 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("", density: ScreenDensity.ScreenLdpi)
            @Expect("assertion#891: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_3 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_0400
     * @tc.name      : TestCase_4
     * @tc.desc      : get MediaBase64 by resName=, density=ScreenDensity.ScreenXldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_4(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_4 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("", density: ScreenDensity.ScreenXldpi)
            @Expect("assertion#892: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_4 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_0500
     * @tc.name      : TestCase_5
     * @tc.desc      : get MediaBase64 by resName=, density=ScreenDensity.ScreenXxldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_5(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_5 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("", density: ScreenDensity.ScreenXxldpi)
            @Expect("assertion#893: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_5 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_0600
     * @tc.name      : TestCase_6
     * @tc.desc      : get MediaBase64 by resName=\0, density=ScreenDensity.ScreenSdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_6(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_6 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("\0", density: ScreenDensity.ScreenSdpi)
            @Expect("assertion#894: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_6 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_0700
     * @tc.name      : TestCase_7
     * @tc.desc      : get MediaBase64 by resName=\0, density=ScreenDensity.ScreenMdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_7(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_7 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("\0", density: ScreenDensity.ScreenMdpi)
            @Expect("assertion#895: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_7 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_0800
     * @tc.name      : TestCase_8
     * @tc.desc      : get MediaBase64 by resName=\0, density=ScreenDensity.ScreenLdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_8(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_8 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("\0", density: ScreenDensity.ScreenLdpi)
            @Expect("assertion#896: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_8 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_0900
     * @tc.name      : TestCase_9
     * @tc.desc      : get MediaBase64 by resName=\0, density=ScreenDensity.ScreenXldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_9(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_9 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("\0", density: ScreenDensity.ScreenXldpi)
            @Expect("assertion#897: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_9 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_1000
     * @tc.name      : TestCase_10
     * @tc.desc      : get MediaBase64 by resName=\0, density=ScreenDensity.ScreenXxldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_10(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_10 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("\0", density: ScreenDensity.ScreenXxldpi)
            @Expect("assertion#898: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_10 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_1100
     * @tc.name      : TestCase_11
     * @tc.desc      : get MediaBase64 by resName=nonExistingResourceName, density=ScreenDensity.ScreenSdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_11(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_11 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("nonExistingResourceName", density: ScreenDensity.ScreenSdpi)
            @Expect("assertion#899: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_11 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_1200
     * @tc.name      : TestCase_12
     * @tc.desc      : get MediaBase64 by resName=nonExistingResourceName, density=ScreenDensity.ScreenMdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_12(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_12 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("nonExistingResourceName", density: ScreenDensity.ScreenMdpi)
            @Expect("assertion#900: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_12 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_1300
     * @tc.name      : TestCase_13
     * @tc.desc      : get MediaBase64 by resName=nonExistingResourceName, density=ScreenDensity.ScreenLdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_13(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_13 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("nonExistingResourceName", density: ScreenDensity.ScreenLdpi)
            @Expect("assertion#901: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_13 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_1400
     * @tc.name      : TestCase_14
     * @tc.desc      : get MediaBase64 by resName=nonExistingResourceName, density=ScreenDensity.ScreenXldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_14(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_14 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("nonExistingResourceName", density: ScreenDensity.ScreenXldpi)
            @Expect("assertion#902: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_14 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_1500
     * @tc.name      : TestCase_15
     * @tc.desc      : get MediaBase64 by resName=nonExistingResourceName, density=ScreenDensity.ScreenXxldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_15(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_15 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("nonExistingResourceName", density: ScreenDensity.ScreenXxldpi)
            @Expect("assertion#903: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_15 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_1600
     * @tc.name      : TestCase_16
     * @tc.desc      : get MediaBase64 by resName=module_desc, density=ScreenDensity.ScreenSdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_16(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_16 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("module_desc", density: ScreenDensity.ScreenSdpi)
            @Expect("assertion#904: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_16 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_1700
     * @tc.name      : TestCase_17
     * @tc.desc      : get MediaBase64 by resName=module_desc, density=ScreenDensity.ScreenMdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_17(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_17 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("module_desc", density: ScreenDensity.ScreenMdpi)
            @Expect("assertion#905: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_17 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_1800
     * @tc.name      : TestCase_18
     * @tc.desc      : get MediaBase64 by resName=module_desc, density=ScreenDensity.ScreenLdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_18(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_18 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("module_desc", density: ScreenDensity.ScreenLdpi)
            @Expect("assertion#906: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_18 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_1900
     * @tc.name      : TestCase_19
     * @tc.desc      : get MediaBase64 by resName=module_desc, density=ScreenDensity.ScreenXldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_19(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_19 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("module_desc", density: ScreenDensity.ScreenXldpi)
            @Expect("assertion#907: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_19 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_2000
     * @tc.name      : TestCase_20
     * @tc.desc      : get MediaBase64 by resName=module_desc, density=ScreenDensity.ScreenXxldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_20(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_20 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("module_desc", density: ScreenDensity.ScreenXxldpi)
            @Expect("assertion#908: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_20 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_2100
     * @tc.name      : TestCase_21
     * @tc.desc      : get MediaBase64 by resName=sizelist, density=ScreenDensity.ScreenSdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_21(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_21 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("sizelist", density: ScreenDensity.ScreenSdpi)
            @Expect("assertion#909: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_21 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_2200
     * @tc.name      : TestCase_22
     * @tc.desc      : get MediaBase64 by resName=sizelist, density=ScreenDensity.ScreenMdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_22(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_22 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("sizelist", density: ScreenDensity.ScreenMdpi)
            @Expect("assertion#910: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_22 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_2300
     * @tc.name      : TestCase_23
     * @tc.desc      : get MediaBase64 by resName=sizelist, density=ScreenDensity.ScreenLdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_23(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_23 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("sizelist", density: ScreenDensity.ScreenLdpi)
            @Expect("assertion#911: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_23 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_2400
     * @tc.name      : TestCase_24
     * @tc.desc      : get MediaBase64 by resName=sizelist, density=ScreenDensity.ScreenXldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_24(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_24 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("sizelist", density: ScreenDensity.ScreenXldpi)
            @Expect("assertion#912: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_24 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_2500
     * @tc.name      : TestCase_25
     * @tc.desc      : get MediaBase64 by resName=sizelist, density=ScreenDensity.ScreenXxldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_25(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_25 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("sizelist", density: ScreenDensity.ScreenXxldpi)
            @Expect("assertion#913: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_25 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_2600
     * @tc.name      : TestCase_26
     * @tc.desc      : get MediaBase64 by resName=plural_name, density=ScreenDensity.ScreenSdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_26(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_26 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("plural_name", density: ScreenDensity.ScreenSdpi)
            @Expect("assertion#914: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_26 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_2700
     * @tc.name      : TestCase_27
     * @tc.desc      : get MediaBase64 by resName=plural_name, density=ScreenDensity.ScreenMdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_27(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_27 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("plural_name", density: ScreenDensity.ScreenMdpi)
            @Expect("assertion#915: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_27 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_2800
     * @tc.name      : TestCase_28
     * @tc.desc      : get MediaBase64 by resName=plural_name, density=ScreenDensity.ScreenLdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_28(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_28 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("plural_name", density: ScreenDensity.ScreenLdpi)
            @Expect("assertion#916: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_28 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_2900
     * @tc.name      : TestCase_29
     * @tc.desc      : get MediaBase64 by resName=plural_name, density=ScreenDensity.ScreenXldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_29(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_29 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("plural_name", density: ScreenDensity.ScreenXldpi)
            @Expect("assertion#917: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_29 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_3000
     * @tc.name      : TestCase_30
     * @tc.desc      : get MediaBase64 by resName=plural_name, density=ScreenDensity.ScreenXxldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_30(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_30 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("plural_name", density: ScreenDensity.ScreenXxldpi)
            @Expect("assertion#918: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_30 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_3100
     * @tc.name      : TestCase_31
     * @tc.desc      : get MediaBase64 by resName=Test_Format1, density=ScreenDensity.ScreenSdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_31(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_31 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("Test_Format1", density: ScreenDensity.ScreenSdpi)
            @Expect("assertion#919: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_31 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_3200
     * @tc.name      : TestCase_32
     * @tc.desc      : get MediaBase64 by resName=Test_Format1, density=ScreenDensity.ScreenMdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_32(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_32 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("Test_Format1", density: ScreenDensity.ScreenMdpi)
            @Expect("assertion#920: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_32 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_3300
     * @tc.name      : TestCase_33
     * @tc.desc      : get MediaBase64 by resName=Test_Format1, density=ScreenDensity.ScreenLdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_33(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_33 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("Test_Format1", density: ScreenDensity.ScreenLdpi)
            @Expect("assertion#921: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_33 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_3400
     * @tc.name      : TestCase_34
     * @tc.desc      : get MediaBase64 by resName=Test_Format1, density=ScreenDensity.ScreenXldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_34(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_34 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("Test_Format1", density: ScreenDensity.ScreenXldpi)
            @Expect("assertion#922: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_34 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_3500
     * @tc.name      : TestCase_35
     * @tc.desc      : get MediaBase64 by resName=Test_Format1, density=ScreenDensity.ScreenXxldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_35(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_35 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("Test_Format1", density: ScreenDensity.ScreenXxldpi)
            @Expect("assertion#923: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_35 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_3600
     * @tc.name      : TestCase_36
     * @tc.desc      : get MediaBase64 by resName=Test_Format2, density=ScreenDensity.ScreenSdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_36(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_36 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("Test_Format2", density: ScreenDensity.ScreenSdpi)
            @Expect("assertion#924: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_36 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_3700
     * @tc.name      : TestCase_37
     * @tc.desc      : get MediaBase64 by resName=Test_Format2, density=ScreenDensity.ScreenMdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_37(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_37 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("Test_Format2", density: ScreenDensity.ScreenMdpi)
            @Expect("assertion#925: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_37 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_3800
     * @tc.name      : TestCase_38
     * @tc.desc      : get MediaBase64 by resName=Test_Format2, density=ScreenDensity.ScreenLdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_38(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_38 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("Test_Format2", density: ScreenDensity.ScreenLdpi)
            @Expect("assertion#926: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_38 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_3900
     * @tc.name      : TestCase_39
     * @tc.desc      : get MediaBase64 by resName=Test_Format2, density=ScreenDensity.ScreenXldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_39(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_39 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("Test_Format2", density: ScreenDensity.ScreenXldpi)
            @Expect("assertion#927: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_39 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_4000
     * @tc.name      : TestCase_40
     * @tc.desc      : get MediaBase64 by resName=Test_Format2, density=ScreenDensity.ScreenXxldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_40(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_40 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("Test_Format2", density: ScreenDensity.ScreenXxldpi)
            @Expect("assertion#928: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_40 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_4100
     * @tc.name      : TestCase_41
     * @tc.desc      : get MediaBase64 by resName=Test_Format3, density=ScreenDensity.ScreenSdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_41(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_41 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("Test_Format3", density: ScreenDensity.ScreenSdpi)
            @Expect("assertion#929: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_41 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_4200
     * @tc.name      : TestCase_42
     * @tc.desc      : get MediaBase64 by resName=Test_Format3, density=ScreenDensity.ScreenMdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_42(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_42 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("Test_Format3", density: ScreenDensity.ScreenMdpi)
            @Expect("assertion#930: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_42 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_4300
     * @tc.name      : TestCase_43
     * @tc.desc      : get MediaBase64 by resName=Test_Format3, density=ScreenDensity.ScreenLdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_43(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_43 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("Test_Format3", density: ScreenDensity.ScreenLdpi)
            @Expect("assertion#931: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_43 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_4400
     * @tc.name      : TestCase_44
     * @tc.desc      : get MediaBase64 by resName=Test_Format3, density=ScreenDensity.ScreenXldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_44(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_44 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("Test_Format3", density: ScreenDensity.ScreenXldpi)
            @Expect("assertion#932: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_44 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_4500
     * @tc.name      : TestCase_45
     * @tc.desc      : get MediaBase64 by resName=Test_Format3, density=ScreenDensity.ScreenXxldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_45(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_45 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("Test_Format3", density: ScreenDensity.ScreenXxldpi)
            @Expect("assertion#933: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_45 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_4600
     * @tc.name      : TestCase_46
     * @tc.desc      : get MediaBase64 by resName=EntryAbility_desc, density=ScreenDensity.ScreenSdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_46(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_46 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("EntryAbility_desc", density: ScreenDensity.ScreenSdpi)
            @Expect("assertion#934: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_46 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_4700
     * @tc.name      : TestCase_47
     * @tc.desc      : get MediaBase64 by resName=EntryAbility_desc, density=ScreenDensity.ScreenMdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_47(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_47 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("EntryAbility_desc", density: ScreenDensity.ScreenMdpi)
            @Expect("assertion#935: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_47 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_4800
     * @tc.name      : TestCase_48
     * @tc.desc      : get MediaBase64 by resName=EntryAbility_desc, density=ScreenDensity.ScreenLdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_48(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_48 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("EntryAbility_desc", density: ScreenDensity.ScreenLdpi)
            @Expect("assertion#936: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_48 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_4900
     * @tc.name      : TestCase_49
     * @tc.desc      : get MediaBase64 by resName=EntryAbility_desc, density=ScreenDensity.ScreenXldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_49(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_49 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("EntryAbility_desc", density: ScreenDensity.ScreenXldpi)
            @Expect("assertion#937: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_49 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_5000
     * @tc.name      : TestCase_50
     * @tc.desc      : get MediaBase64 by resName=EntryAbility_desc, density=ScreenDensity.ScreenXxldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_50(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_50 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("EntryAbility_desc", density: ScreenDensity.ScreenXxldpi)
            @Expect("assertion#938: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_50 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_5100
     * @tc.name      : TestCase_51
     * @tc.desc      : get MediaBase64 by resName=layered_image, density=ScreenDensity.ScreenSdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_51(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_51 begins.")
        Hilog.info(0u32, "CangjieTest", "define local variable mediaBase64")
        let mediaBase64 = getResourceManager().getMediaBase64ByName("layered_image", density: ScreenDensity.ScreenSdpi)
        @Assert(mediaBase64.size > 0i64, true)
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_51 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_5200
     * @tc.name      : TestCase_52
     * @tc.desc      : get MediaBase64 by resName=layered_image, density=ScreenDensity.ScreenMdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_52(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_52 begins.")
        Hilog.info(0u32, "CangjieTest", "define local variable mediaBase64")
        let mediaBase64 = getResourceManager().getMediaBase64ByName("layered_image", density: ScreenDensity.ScreenMdpi)
        @Assert(mediaBase64.size > 0i64, true)
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_52 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_5300
     * @tc.name      : TestCase_53
     * @tc.desc      : get MediaBase64 by resName=layered_image, density=ScreenDensity.ScreenLdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_53(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_53 begins.")
        Hilog.info(0u32, "CangjieTest", "define local variable mediaBase64")
        let mediaBase64 = getResourceManager().getMediaBase64ByName("layered_image", density: ScreenDensity.ScreenLdpi)
        @Assert(mediaBase64.size > 0i64, true)
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_53 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_5400
     * @tc.name      : TestCase_54
     * @tc.desc      : get MediaBase64 by resName=layered_image, density=ScreenDensity.ScreenXldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_54(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_54 begins.")
        Hilog.info(0u32, "CangjieTest", "define local variable mediaBase64")
        let mediaBase64 = getResourceManager().getMediaBase64ByName("layered_image", density: ScreenDensity.ScreenXldpi)
        @Assert(mediaBase64.size > 0i64, true)
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_54 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_5500
     * @tc.name      : TestCase_55
     * @tc.desc      : get MediaBase64 by resName=layered_image, density=ScreenDensity.ScreenXxldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_55(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_55 begins.")
        Hilog.info(0u32, "CangjieTest", "define local variable mediaBase64")
        let mediaBase64 = getResourceManager().getMediaBase64ByName("layered_image", density: ScreenDensity.ScreenXxldpi
        )
        @Assert(mediaBase64.size > 0i64, true)
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_55 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_5600
     * @tc.name      : TestCase_56
     * @tc.desc      : get MediaBase64 by resName=EntryAbility_label, density=ScreenDensity.ScreenSdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_56(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_56 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("EntryAbility_label", density: ScreenDensity.ScreenSdpi)
            @Expect("assertion#939: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_56 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_5700
     * @tc.name      : TestCase_57
     * @tc.desc      : get MediaBase64 by resName=EntryAbility_label, density=ScreenDensity.ScreenMdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_57(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_57 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("EntryAbility_label", density: ScreenDensity.ScreenMdpi)
            @Expect("assertion#940: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_57 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_5800
     * @tc.name      : TestCase_58
     * @tc.desc      : get MediaBase64 by resName=EntryAbility_label, density=ScreenDensity.ScreenLdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_58(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_58 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("EntryAbility_label", density: ScreenDensity.ScreenLdpi)
            @Expect("assertion#941: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_58 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_5900
     * @tc.name      : TestCase_59
     * @tc.desc      : get MediaBase64 by resName=EntryAbility_label, density=ScreenDensity.ScreenXldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_59(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_59 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("EntryAbility_label", density: ScreenDensity.ScreenXldpi)
            @Expect("assertion#942: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_59 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_6000
     * @tc.name      : TestCase_60
     * @tc.desc      : get MediaBase64 by resName=EntryAbility_label, density=ScreenDensity.ScreenXxldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_60(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_60 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("EntryAbility_label", density: ScreenDensity.ScreenXxldpi)
            @Expect("assertion#943: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_60 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_6100
     * @tc.name      : TestCase_61
     * @tc.desc      : get MediaBase64 by resName=startIcon, density=ScreenDensity.ScreenSdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_61(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_61 begins.")
        Hilog.info(0u32, "CangjieTest", "define local variable mediaBase64")
        let mediaBase64 = getResourceManager().getMediaBase64ByName("startIcon", density: ScreenDensity.ScreenSdpi)
        @Assert(mediaBase64.size > 0i64, true)
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_61 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_6200
     * @tc.name      : TestCase_62
     * @tc.desc      : get MediaBase64 by resName=startIcon, density=ScreenDensity.ScreenMdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_62(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_62 begins.")
        Hilog.info(0u32, "CangjieTest", "define local variable mediaBase64")
        let mediaBase64 = getResourceManager().getMediaBase64ByName("startIcon", density: ScreenDensity.ScreenMdpi)
        @Assert(mediaBase64.size > 0i64, true)
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_62 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_6300
     * @tc.name      : TestCase_63
     * @tc.desc      : get MediaBase64 by resName=startIcon, density=ScreenDensity.ScreenLdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_63(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_63 begins.")
        Hilog.info(0u32, "CangjieTest", "define local variable mediaBase64")
        let mediaBase64 = getResourceManager().getMediaBase64ByName("startIcon", density: ScreenDensity.ScreenLdpi)
        @Assert(mediaBase64.size > 0i64, true)
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_63 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_6400
     * @tc.name      : TestCase_64
     * @tc.desc      : get MediaBase64 by resName=startIcon, density=ScreenDensity.ScreenXldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_64(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_64 begins.")
        Hilog.info(0u32, "CangjieTest", "define local variable mediaBase64")
        let mediaBase64 = getResourceManager().getMediaBase64ByName("startIcon", density: ScreenDensity.ScreenXldpi)
        @Assert(mediaBase64.size > 0i64, true)
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_64 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_6500
     * @tc.name      : TestCase_65
     * @tc.desc      : get MediaBase64 by resName=startIcon, density=ScreenDensity.ScreenXxldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_65(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_65 begins.")
        Hilog.info(0u32, "CangjieTest", "define local variable mediaBase64")
        let mediaBase64 = getResourceManager().getMediaBase64ByName("startIcon", density: ScreenDensity.ScreenXxldpi)
        @Assert(mediaBase64.size > 0i64, true)
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_65 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_6600
     * @tc.name      : TestCase_66
     * @tc.desc      : get MediaBase64 by resName=main_pages, density=ScreenDensity.ScreenSdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_66(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_66 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("main_pages", density: ScreenDensity.ScreenSdpi)
            @Expect("assertion#944: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_66 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_6700
     * @tc.name      : TestCase_67
     * @tc.desc      : get MediaBase64 by resName=main_pages, density=ScreenDensity.ScreenMdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_67(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_67 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("main_pages", density: ScreenDensity.ScreenMdpi)
            @Expect("assertion#945: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_67 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_6800
     * @tc.name      : TestCase_68
     * @tc.desc      : get MediaBase64 by resName=main_pages, density=ScreenDensity.ScreenLdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_68(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_68 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("main_pages", density: ScreenDensity.ScreenLdpi)
            @Expect("assertion#946: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_68 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_6900
     * @tc.name      : TestCase_69
     * @tc.desc      : get MediaBase64 by resName=main_pages, density=ScreenDensity.ScreenXldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_69(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_69 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("main_pages", density: ScreenDensity.ScreenXldpi)
            @Expect("assertion#947: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_69 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_7000
     * @tc.name      : TestCase_70
     * @tc.desc      : get MediaBase64 by resName=main_pages, density=ScreenDensity.ScreenXxldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_70(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_70 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("main_pages", density: ScreenDensity.ScreenXxldpi)
            @Expect("assertion#948: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_70 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_7100
     * @tc.name      : TestCase_71
     * @tc.desc      : get MediaBase64 by resName=start_window_background, density=ScreenDensity.ScreenSdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_71(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_71 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("start_window_background", density: ScreenDensity.ScreenSdpi)
            @Expect("assertion#949: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_71 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_7200
     * @tc.name      : TestCase_72
     * @tc.desc      : get MediaBase64 by resName=start_window_background, density=ScreenDensity.ScreenMdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_72(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_72 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("start_window_background", density: ScreenDensity.ScreenMdpi)
            @Expect("assertion#950: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_72 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_7300
     * @tc.name      : TestCase_73
     * @tc.desc      : get MediaBase64 by resName=start_window_background, density=ScreenDensity.ScreenLdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_73(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_73 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("start_window_background", density: ScreenDensity.ScreenLdpi)
            @Expect("assertion#951: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_73 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_7400
     * @tc.name      : TestCase_74
     * @tc.desc      : get MediaBase64 by resName=start_window_background, density=ScreenDensity.ScreenXldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_74(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_74 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("start_window_background", density: ScreenDensity.ScreenXldpi)
            @Expect("assertion#952: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_74 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_7500
     * @tc.name      : TestCase_75
     * @tc.desc      : get MediaBase64 by resName=start_window_background, density=ScreenDensity.ScreenXxldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_75(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_75 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("start_window_background", density: ScreenDensity.ScreenXxldpi)
            @Expect("assertion#953: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_75 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_7600
     * @tc.name      : TestCase_76
     * @tc.desc      : get MediaBase64 by resName=float_1, density=ScreenDensity.ScreenSdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_76(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_76 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("float_1", density: ScreenDensity.ScreenSdpi)
            @Expect("assertion#954: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_76 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_7700
     * @tc.name      : TestCase_77
     * @tc.desc      : get MediaBase64 by resName=float_1, density=ScreenDensity.ScreenMdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_77(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_77 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("float_1", density: ScreenDensity.ScreenMdpi)
            @Expect("assertion#955: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_77 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_7800
     * @tc.name      : TestCase_78
     * @tc.desc      : get MediaBase64 by resName=float_1, density=ScreenDensity.ScreenLdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_78(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_78 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("float_1", density: ScreenDensity.ScreenLdpi)
            @Expect("assertion#956: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_78 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_7900
     * @tc.name      : TestCase_79
     * @tc.desc      : get MediaBase64 by resName=float_1, density=ScreenDensity.ScreenXldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_79(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_79 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("float_1", density: ScreenDensity.ScreenXldpi)
            @Expect("assertion#957: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_79 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_8000
     * @tc.name      : TestCase_80
     * @tc.desc      : get MediaBase64 by resName=float_1, density=ScreenDensity.ScreenXxldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_80(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_80 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("float_1", density: ScreenDensity.ScreenXxldpi)
            @Expect("assertion#958: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_80 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_8100
     * @tc.name      : TestCase_81
     * @tc.desc      : get MediaBase64 by resName=float_2, density=ScreenDensity.ScreenSdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_81(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_81 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("float_2", density: ScreenDensity.ScreenSdpi)
            @Expect("assertion#959: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_81 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_8200
     * @tc.name      : TestCase_82
     * @tc.desc      : get MediaBase64 by resName=float_2, density=ScreenDensity.ScreenMdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_82(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_82 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("float_2", density: ScreenDensity.ScreenMdpi)
            @Expect("assertion#960: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_82 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_8300
     * @tc.name      : TestCase_83
     * @tc.desc      : get MediaBase64 by resName=float_2, density=ScreenDensity.ScreenLdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_83(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_83 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("float_2", density: ScreenDensity.ScreenLdpi)
            @Expect("assertion#961: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_83 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_8400
     * @tc.name      : TestCase_84
     * @tc.desc      : get MediaBase64 by resName=float_2, density=ScreenDensity.ScreenXldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_84(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_84 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("float_2", density: ScreenDensity.ScreenXldpi)
            @Expect("assertion#962: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_84 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_8500
     * @tc.name      : TestCase_85
     * @tc.desc      : get MediaBase64 by resName=float_2, density=ScreenDensity.ScreenXxldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_85(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_85 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("float_2", density: ScreenDensity.ScreenXxldpi)
            @Expect("assertion#963: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_85 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_8600
     * @tc.name      : TestCase_86
     * @tc.desc      : get MediaBase64 by resName=int_1, density=ScreenDensity.ScreenSdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_86(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_86 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("int_1", density: ScreenDensity.ScreenSdpi)
            @Expect("assertion#964: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_86 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_8700
     * @tc.name      : TestCase_87
     * @tc.desc      : get MediaBase64 by resName=int_1, density=ScreenDensity.ScreenMdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_87(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_87 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("int_1", density: ScreenDensity.ScreenMdpi)
            @Expect("assertion#965: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_87 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_8800
     * @tc.name      : TestCase_88
     * @tc.desc      : get MediaBase64 by resName=int_1, density=ScreenDensity.ScreenLdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_88(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_88 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("int_1", density: ScreenDensity.ScreenLdpi)
            @Expect("assertion#966: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_88 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_8900
     * @tc.name      : TestCase_89
     * @tc.desc      : get MediaBase64 by resName=int_1, density=ScreenDensity.ScreenXldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_89(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_89 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("int_1", density: ScreenDensity.ScreenXldpi)
            @Expect("assertion#967: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_89 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_9000
     * @tc.name      : TestCase_90
     * @tc.desc      : get MediaBase64 by resName=int_1, density=ScreenDensity.ScreenXxldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_90(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_90 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("int_1", density: ScreenDensity.ScreenXxldpi)
            @Expect("assertion#968: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_90 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_9100
     * @tc.name      : TestCase_91
     * @tc.desc      : get MediaBase64 by resName=int_2, density=ScreenDensity.ScreenSdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_91(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_91 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("int_2", density: ScreenDensity.ScreenSdpi)
            @Expect("assertion#969: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_91 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_9200
     * @tc.name      : TestCase_92
     * @tc.desc      : get MediaBase64 by resName=int_2, density=ScreenDensity.ScreenMdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_92(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_92 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("int_2", density: ScreenDensity.ScreenMdpi)
            @Expect("assertion#970: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_92 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_9300
     * @tc.name      : TestCase_93
     * @tc.desc      : get MediaBase64 by resName=int_2, density=ScreenDensity.ScreenLdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_93(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_93 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("int_2", density: ScreenDensity.ScreenLdpi)
            @Expect("assertion#971: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_93 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_9400
     * @tc.name      : TestCase_94
     * @tc.desc      : get MediaBase64 by resName=int_2, density=ScreenDensity.ScreenXldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_94(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_94 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("int_2", density: ScreenDensity.ScreenXldpi)
            @Expect("assertion#972: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_94 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_9500
     * @tc.name      : TestCase_95
     * @tc.desc      : get MediaBase64 by resName=int_2, density=ScreenDensity.ScreenXxldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_95(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_95 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("int_2", density: ScreenDensity.ScreenXxldpi)
            @Expect("assertion#973: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_95 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_9600
     * @tc.name      : TestCase_96
     * @tc.desc      : get MediaBase64 by resName=test_boolean1, density=ScreenDensity.ScreenSdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_96(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_96 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("test_boolean1", density: ScreenDensity.ScreenSdpi)
            @Expect("assertion#974: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_96 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_9700
     * @tc.name      : TestCase_97
     * @tc.desc      : get MediaBase64 by resName=test_boolean1, density=ScreenDensity.ScreenMdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_97(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_97 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("test_boolean1", density: ScreenDensity.ScreenMdpi)
            @Expect("assertion#975: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_97 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_9800
     * @tc.name      : TestCase_98
     * @tc.desc      : get MediaBase64 by resName=test_boolean1, density=ScreenDensity.ScreenLdpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_98(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_98 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("test_boolean1", density: ScreenDensity.ScreenLdpi)
            @Expect("assertion#976: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_98 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_9900
     * @tc.name      : TestCase_99
     * @tc.desc      : get MediaBase64 by resName=test_boolean1, density=ScreenDensity.ScreenXldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_99(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_99 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("test_boolean1", density: ScreenDensity.ScreenXldpi)
            @Expect("assertion#977: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_99 ends.")
    }

    /*
     * @tc.number    : Sub_Cangjie_ResourceManager_getMediaBase64ByName_10000
     * @tc.name      : TestCase_100
     * @tc.desc      : get MediaBase64 by resName=test_boolean1, density=ScreenDensity.ScreenXxldpi.
     * @tc.size      : MediumTest
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func TestCase_100(): Unit {
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_100 begins.")
        Hilog.info(0u32, "CangjieTest", "fail to get mediaBase64 by name.")
        try {
            getResourceManager().getMediaBase64ByName("test_boolean1", density: ScreenDensity.ScreenXxldpi)
            @Expect("assertion#978: not throw", "fail to get mediaBase64 by name.")
        } catch (e: BusinessException) {
            @Expect(e.message, "Invalid resource name.")
            @Expect(e.code, 9001003i32)
        }
        Hilog.info(0u32, "CangjieTest", "testcase TestCase_100 ends.")
    }
}
