/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ohos_app_cangjie_entry

import kit.PerformanceAnalysisKit.Hilog
internal import std.unittest.*
import std.unittest.testmacro.*
import ohos.ui_test.*
import std.unittest.testmacro.*
import std.unittest.common.*


@Test
class Test_Button_Component {
    prop driver: Driver {
        get() {
            OpenHarmonyTestRunner.driver
        }
    }

    protected override func beforeAll() {
        driver.delayMs(3000)
        driver.findComponent(On().onType("Scroll")).getOrThrow().scrollSearch(On().id("View_Button")).getOrThrow().click()
        driver.delayMs(1000)
    }

    protected override func afterAll() {
        driver.delayMs(1000)
        driver.pressBack()
    }

    
    /*
    * @tc.number    : Sub_Cangjie_UIKit_Button_Component_0100
    * @tc.name      : Test_Button_Component_001
    * @tc.desc      : test UIKit Button
    * @tc.size      : MediumTest
    * @tc.type      : Function
    * @tc.level     : Level 0
    */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func Test_Button_Component_001() {
        Hilog.info(0,"",   "cangjietest", "Test_Button_Component_001 start")
        let Button = getInspectorByKey("button")
        let obj = JsonValue.fromStr(Button).asObject()
        Hilog.info(0,"",   "cangjietest", "[Test_Blank_Button_001] Inspector value: ${Button}")
        let obj_label = obj.get("$attrs").getOrThrow().asObject().get("label").getOrThrow().toString()
        Hilog.info(0,"",   "cangjietest", "[Test_Blank_Component_001] borderStyle value: ${obj_label}")
        @Expect(obj_label,"\"Test_button\"")
    }

    
    /*
    * @tc.number    : Sub_Cangjie_UIKit_Button_Component_0200
    * @tc.name      : Test_Button_Component_002
    * @tc.desc      : test UIKit Button
    * @tc.size      : MediumTest
    * @tc.type      : Function
    * @tc.level     : Level 0
    */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func Test_Button_Component_002() {
        Hilog.info(0,"",   "cangjietest", "Test_Button_Component_002 start")
        let Button = getInspectorByKey("button")
        let obj = JsonValue.fromStr(Button).asObject()
        Hilog.info(0,"",   "cangjietest", "[Test_Button_Component_002] Inspector value: ${Button}")
        let obj_type = obj.get("$attrs").getOrThrow().asObject().get("type").getOrThrow().toString()
        Hilog.info(0,"",   "cangjietest", "[Test_Button_Component_002] borderStyle value: ${obj_type}")
        @Expect(obj_type,"\"ButtonType.Normal\"")
    }

    
    /*
    * @tc.number    : Sub_Cangjie_UIKit_Button_Component_0300
    * @tc.name      : Test_Button_Component_003
    * @tc.desc      : test UIKit Button
    * @tc.size      : MediumTest
    * @tc.type      : Function
    * @tc.level     : Level 0
    */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func Test_Button_Component_003() {
        Hilog.info(0,"",   "cangjietest", "Test_Button_Component_003 start")
        let Button = getInspectorByKey("button")
        let obj = JsonValue.fromStr(Button).asObject()
        Hilog.info(0,"",   "cangjietest", "[Test_Button_Component_003] Inspector value: ${Button}")
        let obj_stateEffect = obj.get("$attrs").getOrThrow().asObject().get("stateEffect").getOrThrow().toString()
        Hilog.info(0,"",   "cangjietest", "[Test_Button_Component_003] borderStyle value: ${obj_stateEffect}")
        @Expect(obj_stateEffect,"\"true\"")
    }

    
    /*
    * @tc.number    : Sub_Cangjie_UIKit_Button_Component_0400
    * @tc.name      : Test_Button_Component_004
    * @tc.desc      : test UIKit Button
    * @tc.size      : MediumTest
    * @tc.type      : Function
    * @tc.level     : Level 0
    */
    @TestCase
    @Tag[APILevel12, TestLevel0]
    func Test_Button_Component_004() {
        Hilog.info(0,"",   "cangjietest", "Test_Button_Component_004 start")
        let Button = getInspectorByKey("button_01")
        Hilog.info(0,"",   "cangjietest", "[Test_Button_Component_004] Inspector value: ${Button}")
        let Button_01 = getInspectorByKey("button_02")
        let obj = JsonValue.fromStr(Button).asObject()
        let obj_01 = JsonValue.fromStr(Button_01).asObject()
        let obj_content = obj.get("$attrs").getOrThrow().asObject().get("content").getOrThrow().toString()
        Hilog.info(0,"",   "cangjietest", "[Test_Button_Component_004] type value: ${obj_content}")
        let obj_content_01 = obj_01.get("$attrs").getOrThrow().asObject().get("content").getOrThrow().toString()
        @Expect(obj_content,"\"Test_button_01\"")
        @Expect(obj_content_01,"\"Test_button_02\"")
    }
}
