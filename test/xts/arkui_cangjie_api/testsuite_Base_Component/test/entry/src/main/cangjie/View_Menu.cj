/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ohos_app_cangjie_entry

import kit.PerformanceAnalysisKit.Hilog
import std.unittest.testmacro.*
import ohos.ui_test.*
import ohos.base.{LengthProp, Length,  Color, LengthType}
import ohos.arkui.component.*
import ohos.arkui.state_management.*
import ohos.arkui.state_macro_manage.*
import ohos.multimedia.image.PixelMap
import ohos.multimedia.image.createPixelMap
import ohos.multimedia.image.InitializationOptions
import ohos.multimedia.image.Size
import ohos.multimedia.image.ScaleMode
import std.collection.*
import kit.LocalizationKit.{AppResource}

@Entry
@Component
class View_Menu {
    @State
    var select: Bool = true
    let iconStr: AppResource = @r(app.media.menu)
    var iconStr2: AppResource = @r(app.media.menu)
    var content: AppResource = @r(app.string.contentName)

    @Builder
    func SubMenu() {
        Menu() {
            MenuItem(startIcon: " ", endIcon: " ", content: "复制", labelInfo: "Ctrl+C").id("Test_Menu_07")
            MenuItem(startIcon: " ", endIcon: " ", content: "粘贴", labelInfo: "Ctrl+V").id("Test_Menu_08")
        }
    }

    @Builder
    func MyMenu() {
        Menu() {
            MenuItem(startIcon: "测试", endIcon: "菜单", content: "复制", labelInfo: "Ctrl+C")
                .id("Test_Menu_01")
                .width(150.vp)
                .contentFont(size: 15.vp, weight: FontWeight.Medium, family: "HarmonyOS Sans", style: FontStyle.Normal)
                .contentFontColor(@r(app.color.blue_color))
                .labelFont(size: 15.vp, weight: FontWeight.Medium, family: "Arial", style: FontStyle.Italic)
                .labelFontColor(@r(app.color.red_color))
                .selected(true)
            MenuItem(startIcon: @r(app.media.icon), content: @r(app.string.contentName), endIcon: @r(app.media.blank),
                labelInfo: @r(app.string.emptyName)).selected(false).id("Test_Menu_02")
            MenuItem(
                startIcon: this.iconStr,
                content: @r(app.string.contentName),
                endIcon: @r(app.media.right),
                labelInfo: @r(app.string.emptyName),
                builder: bind(this.SubMenu, this)
            ).id("Test_Menu_03")
            MenuItemGroup(header: "小标题", footer: "Test") {
                =>
                MenuItem(startIcon: "", endIcon: "", content: "菜单选项", labelInfo: "")
                    .selectIcon(true)
                    .selected(true)
                    .onChange(
                        {
                            selected =>
                            iconStr2 = @r(app.media.wx)
                            content = @r(app.string.contentName1)
                            Hilog.info(0,"",   "cangjietest", "onChange")
                        }
                    )
                    .id("Test_Menu_04")
                MenuItem(
                    startIcon: @r(app.media.menu),
                    content: @r(app.string.contentName),
                    endIcon: @r(app.media.right),
                    labelInfo: @r(app.string.emptyName),
                    builder: bind(this.SubMenu, this)
                ).id("Test_Menu_05")
            }.id("Test_MenuItemGroup")
            MenuItem(
                startIcon: this.iconStr2,
                content: this.content,
                endIcon: @r(app.media.right),
                labelInfo: @r(app.string.emptyName),
            ).id("Test_Menu_06")
        }
            .font(size: 15.vp, weight: FontWeight.Medium, family: "HarmonyOS Sans", style: FontStyle.Italic)
            .fontColor(0x9B30FF)
            .radius(40.percent)
            .width(200.vp)
            .id("Menu")
    }

    func build() {
        Row() {
            Column() {
                Button("click to show menu").id("showmenu").fontSize(50).fontWeight(FontWeight.Bold)
            }.bindMenu(builder:this.MyMenu).width(100.percent)
        }.height(100.percent)
    }
}
